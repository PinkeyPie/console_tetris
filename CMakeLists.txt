cmake_minimum_required(VERSION 3.27)
project(console_tetris C)

set(CMAKE_C_STANDARD 11)

MACRO(SCAN_FILES return_list input_dir extension)
    FILE(GLOB_RECURSE new_list RELATIVE ${input_dir} ${input_dir}/*${extension})
    SET(files_list "")
    FOREACH (file_path ${new_list})
        LIST(APPEND files_list ${input_dir}/${file_path})
    ENDFOREACH ()
    LIST(REMOVE_DUPLICATES files_list)
    SET(${return_list} ${files_list})
ENDMACRO()
MACRO(SRC_FILE_LIST result current_dir)
    FILE(GLOB children RELATIVE ${current_dir} ${current_dir}/*.cpp)
    SET(src_list "")
    FOREACH (child ${children})
        LIST(APPEND src_list ${current_dir}/${child})
    ENDFOREACH ()
    LIST(REMOVE_DUPLICATES src_list)
    SET(${result} ${src_list})
ENDMACRO()
MACRO(ADD_SOURCE_DIRECTORY SOURCES HEADERS SCAN_DIRS)
    FOREACH(DIR ${SCAN_DIRS})
        file(GLOB SRC_TEMP "${DIR}/*.cpp" "${DIR}/*.c" "${DIR}/*.cc")
        file(GLOB HDR_TEMP "${DIR}/*.h" "${DIR}/*.hh" "${DIR}/*.hpp")
        LIST(APPEND ${SOURCES} ${SRC_TEMP})
        LIST(APPEND ${HEADERS} ${HDR_TEMP})
    ENDFOREACH(DIR)
ENDMACRO(ADD_SOURCE_DIRECTORY)
MACRO(SRC_FILES return_list current_dir)
    SCAN_FILES(${return_list} ${current_dir} .c)
ENDMACRO()
MACRO(HEADER_FILES return_list current_dir)
    SCAN_FILES(${return_list} ${current_dir} .h)
ENDMACRO()

set(SHARED_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src/libs/Shared)
set(COLLECTIONS_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src/libs/Collections)

SRC_FILES(COLLECTIONS_SRC ${COLLECTIONS_SRC_DIR})
add_library(collections SHARED ${COLLECTIONS_SRC})
target_include_directories(collections PUBLIC ${SHARED_DIR})

set(TETRIS_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/src)
SRC_FILES(TETRIS_SRC ${TETRIS_SRC_DIR})
add_executable(tetris ${TETRIS_SRC})
target_link_libraries(tetris PRIVATE collections)
target_include_directories(tetris PRIVATE ${COLLECTIONS_SRC_DIR})
target_include_directories(tetris PUBLIC ${SHARED_DIR})
